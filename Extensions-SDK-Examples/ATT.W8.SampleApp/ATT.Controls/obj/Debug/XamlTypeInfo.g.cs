//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace ATT.Controls.ATT_Controls_XamlTypeInfo
{
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks","4.0.0.0")]
    public sealed class XamlMetaDataProvider: global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlTypeInfoProvider _provider;

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            if(_provider == null)
            {
                _provider = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByType(type);
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.String fullName)
        {
            if(_provider == null)
            {
                _provider = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByName(fullName);
        }

        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }
}

namespace ATT.Controls.ATT_Controls_XamlTypeInfo
{
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            string standardName;
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            if(_xamlTypeToStandardName.TryGetValue(type, out standardName))
            {
                xamlType = GetXamlTypeByName(standardName);
            }
            else
            {
                xamlType = GetXamlTypeByName(type.FullName);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (global::System.String.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypes.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            xamlType = CreateXamlType(typeName);
            if (xamlType != null)
            {
                _xamlTypes.Add(typeName, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (global::System.String.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType> _xamlTypes = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();
        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember> _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();
        global::System.Collections.Generic.Dictionary<global::System.Type, string> _xamlTypeToStandardName = new global::System.Collections.Generic.Dictionary<global::System.Type, string>();

        private void AddToMapOfTypeToStandardName(global::System.Type t, global::System.String str)
        {
            if(!_xamlTypeToStandardName.ContainsKey(t))
            {
                _xamlTypeToStandardName.Add(t, str);
            }
        }

        private object Activate_0_ErrorToolTip() { return new global::ATT.Controls.SubControls.ErrorToolTip(); }

        private object Activate_1_EmptyStringVisibilityConverter() { return new global::ATT.Controls.Utility.EmptyStringVisibilityConverter(); }

        private object Activate_2_FileOpenPickerControl() { return new global::ATT.Controls.SubControls.FileOpenPickerControl(); }

        private object Activate_8_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Windows.Storage.StorageFile>(); }

        private object Activate_9_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Windows.Storage.StorageFile>(); }

        private object Activate_18_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::ATT.Controls.SubControls.FilePreview>(); }

        private object Activate_19_Collection() { return new global::System.Collections.ObjectModel.Collection<global::ATT.Controls.SubControls.FilePreview>(); }

        private object Activate_22_NullVisibilityConverter() { return new global::ATT.Controls.Utility.NullVisibilityConverter(); }

        private object Activate_23_MmsControl() { return new global::ATT.Controls.MmsControl(); }

        private object Activate_27_PhoneNumbersControl() { return new global::ATT.Controls.SubControls.PhoneNumbersControl(); }

        private object Activate_31_MessageControl() { return new global::ATT.Controls.SubControls.MessageControl(); }

        private object Activate_32_MmsCouponControl() { return new global::ATT.Controls.MmsCouponControl(); }

        private object Activate_33_FileOpenPickerPreviewControl() { return new global::ATT.Controls.SubControls.FileOpenPickerPreviewControl(); }

        private object Activate_34_FileOpenPickerPreviewControlPresenter() { return new global::ATT.Controls.Presenters.FileOpenPickerPreviewControlPresenter(); }

        private object Activate_36_ExtendedTextBox() { return new global::ATT.Controls.SubControls.ExtendedTextBox(); }

        private object Activate_39_TextBoxFormatValidationHandler() { return new global::ATT.Controls.SubControls.TextBoxFormatValidationHandler(); }

        private object Activate_40_SmsControl() { return new global::ATT.Controls.SmsControl(); }

        private object Activate_41_SmsVotingControl() { return new global::ATT.Controls.SmsVotingControl(); }

        private object Activate_43_SmsVotingChart() { return new global::ATT.Controls.SubControls.SmsVotingSubControls.SmsVotingChart(); }

        private object Activate_45_SpeechControl() { return new global::ATT.Controls.SpeechControl(); }

        private void VectorAdd_8_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.Storage.StorageFile>)instance;
            var newItem = (global::Windows.Storage.StorageFile)item;
            collection.Add(newItem);
        }

        private void VectorAdd_9_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.Storage.StorageFile>)instance;
            var newItem = (global::Windows.Storage.StorageFile)item;
            collection.Add(newItem);
        }

        private void VectorAdd_18_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::ATT.Controls.SubControls.FilePreview>)instance;
            var newItem = (global::ATT.Controls.SubControls.FilePreview)item;
            collection.Add(newItem);
        }

        private void VectorAdd_19_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::ATT.Controls.SubControls.FilePreview>)instance;
            var newItem = (global::ATT.Controls.SubControls.FilePreview)item;
            collection.Add(newItem);
        }


        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(string typeName)
        {
            global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType userType;

            switch (typeName)
            {
            case "Windows.UI.Xaml.Controls.Control":
                xamlType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlSystemBaseType(typeName, typeof(global::Windows.UI.Xaml.Controls.Control));
                break;

            case "String":
                xamlType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlSystemBaseType(typeName, typeof(global::System.String));
                break;

            case "Object":
                xamlType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlSystemBaseType(typeName, typeof(global::System.Object));
                break;

            case "Windows.UI.Xaml.Style":
                xamlType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlSystemBaseType(typeName, typeof(global::Windows.UI.Xaml.Style));
                break;

            case "Boolean":
                xamlType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlSystemBaseType(typeName, typeof(global::System.Boolean));
                break;

            case "Int32":
                xamlType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlSystemBaseType(typeName, typeof(global::System.Int32));
                break;

            case "UInt64":
                xamlType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlSystemBaseType(typeName, typeof(global::System.UInt64));
                break;

            case "Windows.UI.Xaml.Media.Imaging.BitmapImage":
                xamlType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlSystemBaseType(typeName, typeof(global::Windows.UI.Xaml.Media.Imaging.BitmapImage));
                break;

            case "Windows.UI.Xaml.Controls.TextBox":
                xamlType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlSystemBaseType(typeName, typeof(global::Windows.UI.Xaml.Controls.TextBox));
                break;

            case "Windows.UI.Xaml.DependencyObject":
                xamlType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlSystemBaseType(typeName, typeof(global::Windows.UI.Xaml.DependencyObject));
                break;

            case "Windows.UI.Xaml.Media.Brush":
                xamlType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlSystemBaseType(typeName, typeof(global::Windows.UI.Xaml.Media.Brush));
                break;

            case "ATT.Controls.SubControls.ErrorToolTip":
                userType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::ATT.Controls.SubControls.ErrorToolTip), GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_0_ErrorToolTip;
                userType.AddMemberName("ErrorMessage");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                xamlType = userType;
                break;

            case "ATT.Controls.Utility.EmptyStringVisibilityConverter":
                userType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::ATT.Controls.Utility.EmptyStringVisibilityConverter), GetXamlTypeByName("Object"));
                userType.Activator = Activate_1_EmptyStringVisibilityConverter;
                xamlType = userType;
                break;

            case "ATT.Controls.SubControls.FileOpenPickerControl":
                userType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::ATT.Controls.SubControls.FileOpenPickerControl), GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_2_FileOpenPickerControl;
                userType.AddMemberName("FileOpenCommand");
                userType.AddMemberName("ClearCommand");
                userType.AddMemberName("RemoveCommand");
                userType.AddMemberName("ClearErrorFileCommand");
                userType.AddMemberName("FileOpenPathStyle");
                userType.AddMemberName("FileOpenButtonStyle");
                userType.AddMemberName("FileOpenButtonText");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("FileType");
                userType.AddMemberName("File");
                userType.AddMemberName("Files");
                AddToMapOfTypeToStandardName(typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Windows.Storage.StorageFile>),
                                                   "System.Collections.ObjectModel.ObservableCollection<Windows.Storage.StorageFile>");
                userType.AddMemberName("FilesExt");
                AddToMapOfTypeToStandardName(typeof(global::System.Collections.ObjectModel.ObservableCollection<global::ATT.Controls.SubControls.FilePreview>),
                                                   "System.Collections.ObjectModel.ObservableCollection<ATT.Controls.SubControls.FilePreview>");
                userType.AddMemberName("SelectMultipleFiles");
                AddToMapOfTypeToStandardName(typeof(global::System.Boolean),
                                                   "Boolean");
                userType.AddMemberName("ErrorMessage");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("MaxNewFilesSize");
                AddToMapOfTypeToStandardName(typeof(global::System.UInt64),
                                                   "UInt64");
                xamlType = userType;
                break;

            case "ATT.Controls.Utility.RelayCommand":
                userType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::ATT.Controls.Utility.RelayCommand), GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case "ATT.Controls.FileType":
                userType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::ATT.Controls.FileType), GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Any", global::ATT.Controls.FileType.Any);
                userType.AddEnumValue("Audio", global::ATT.Controls.FileType.Audio);
                userType.AddEnumValue("Video", global::ATT.Controls.FileType.Video);
                userType.AddEnumValue("Picture", global::ATT.Controls.FileType.Picture);
                xamlType = userType;
                break;

            case "System.Enum":
                userType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.Enum), GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case "System.ValueType":
                userType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.ValueType), GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case "Windows.Storage.StorageFile":
                userType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::Windows.Storage.StorageFile), GetXamlTypeByName("Object"));
                userType.AddMemberName("ContentType");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("FileType");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("Attributes");
                userType.AddMemberName("DateCreated");
                userType.AddMemberName("Name");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("Path");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("DisplayName");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("DisplayType");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("FolderRelativeId");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("Properties");
                userType.AddMemberName("FileFromPathAsync");
                AddToMapOfTypeToStandardName(typeof(global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile>),
                                                   "Windows.Foundation.IAsyncOperation<Windows.Storage.StorageFile>");
                userType.AddMemberName("FileFromApplicationUriAsync");
                AddToMapOfTypeToStandardName(typeof(global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile>),
                                                   "Windows.Foundation.IAsyncOperation<Windows.Storage.StorageFile>");
                xamlType = userType;
                break;

            case "System.Collections.ObjectModel.ObservableCollection<Windows.Storage.StorageFile>":
                userType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Windows.Storage.StorageFile>), GetXamlTypeByName("System.Collections.ObjectModel.Collection<Windows.Storage.StorageFile>"));
                AddToMapOfTypeToStandardName(typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Windows.Storage.StorageFile>),
                                                   "System.Collections.ObjectModel.ObservableCollection<Windows.Storage.StorageFile>");
                userType.Activator = Activate_8_ObservableCollection;
                userType.CollectionAdd = VectorAdd_8_ObservableCollection;
                xamlType = userType;
                break;

            case "System.Collections.ObjectModel.Collection<Windows.Storage.StorageFile>":
                userType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.Collections.ObjectModel.Collection<global::Windows.Storage.StorageFile>), GetXamlTypeByName("Object"));
                AddToMapOfTypeToStandardName(typeof(global::System.Collections.ObjectModel.Collection<global::Windows.Storage.StorageFile>),
                                                   "System.Collections.ObjectModel.Collection<Windows.Storage.StorageFile>");
                userType.Activator = Activate_9_Collection;
                userType.CollectionAdd = VectorAdd_9_Collection;
                xamlType = userType;
                break;

            case "Windows.Storage.FileAttributes":
                userType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::Windows.Storage.FileAttributes), GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Normal", global::Windows.Storage.FileAttributes.Normal);
                userType.AddEnumValue("ReadOnly", global::Windows.Storage.FileAttributes.ReadOnly);
                userType.AddEnumValue("Directory", global::Windows.Storage.FileAttributes.Directory);
                userType.AddEnumValue("Archive", global::Windows.Storage.FileAttributes.Archive);
                userType.AddEnumValue("Temporary", global::Windows.Storage.FileAttributes.Temporary);
                xamlType = userType;
                break;

            case "System.DateTimeOffset":
                userType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.DateTimeOffset), GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case "Windows.Storage.FileProperties.StorageItemContentProperties":
                userType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::Windows.Storage.FileProperties.StorageItemContentProperties), GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case "Windows.Foundation.IAsyncOperation<Windows.Storage.StorageFile>":
                userType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile>), null);
                AddToMapOfTypeToStandardName(typeof(global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile>),
                                                   "Windows.Foundation.IAsyncOperation<Windows.Storage.StorageFile>");
                xamlType = userType;
                break;

            case "System.Uri":
                userType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.Uri), GetXamlTypeByName("Object"));
                userType.AddMemberName("AbsolutePath");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("AbsoluteUri");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("Authority");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("DnsSafeHost");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("Fragment");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("Host");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("HostNameType");
                userType.AddMemberName("IsAbsoluteUri");
                AddToMapOfTypeToStandardName(typeof(global::System.Boolean),
                                                   "Boolean");
                userType.AddMemberName("IsDefaultPort");
                AddToMapOfTypeToStandardName(typeof(global::System.Boolean),
                                                   "Boolean");
                userType.AddMemberName("IsFile");
                AddToMapOfTypeToStandardName(typeof(global::System.Boolean),
                                                   "Boolean");
                userType.AddMemberName("IsLoopback");
                AddToMapOfTypeToStandardName(typeof(global::System.Boolean),
                                                   "Boolean");
                userType.AddMemberName("IsUnc");
                AddToMapOfTypeToStandardName(typeof(global::System.Boolean),
                                                   "Boolean");
                userType.AddMemberName("LocalPath");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("OriginalString");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("PathAndQuery");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("Port");
                AddToMapOfTypeToStandardName(typeof(global::System.Int32),
                                                   "Int32");
                userType.AddMemberName("Query");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("Scheme");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("Segments");
                AddToMapOfTypeToStandardName(typeof(global::System.String[]),
                                                   "String[]");
                userType.AddMemberName("UserEscaped");
                AddToMapOfTypeToStandardName(typeof(global::System.Boolean),
                                                   "Boolean");
                userType.AddMemberName("UserInfo");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                xamlType = userType;
                break;

            case "System.UriHostNameType":
                userType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.UriHostNameType), GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Unknown", global::System.UriHostNameType.Unknown);
                userType.AddEnumValue("Basic", global::System.UriHostNameType.Basic);
                userType.AddEnumValue("Dns", global::System.UriHostNameType.Dns);
                userType.AddEnumValue("IPv4", global::System.UriHostNameType.IPv4);
                userType.AddEnumValue("IPv6", global::System.UriHostNameType.IPv6);
                xamlType = userType;
                break;

            case "String[]":
                userType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.String[]), GetXamlTypeByName("System.Array"));
                AddToMapOfTypeToStandardName(typeof(global::System.String[]),
                                                   "String[]");
                xamlType = userType;
                break;

            case "System.Array":
                userType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.Array), GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case "System.Collections.ObjectModel.ObservableCollection<ATT.Controls.SubControls.FilePreview>":
                userType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.Collections.ObjectModel.ObservableCollection<global::ATT.Controls.SubControls.FilePreview>), GetXamlTypeByName("System.Collections.ObjectModel.Collection<ATT.Controls.SubControls.FilePreview>"));
                AddToMapOfTypeToStandardName(typeof(global::System.Collections.ObjectModel.ObservableCollection<global::ATT.Controls.SubControls.FilePreview>),
                                                   "System.Collections.ObjectModel.ObservableCollection<ATT.Controls.SubControls.FilePreview>");
                userType.Activator = Activate_18_ObservableCollection;
                userType.CollectionAdd = VectorAdd_18_ObservableCollection;
                xamlType = userType;
                break;

            case "System.Collections.ObjectModel.Collection<ATT.Controls.SubControls.FilePreview>":
                userType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.Collections.ObjectModel.Collection<global::ATT.Controls.SubControls.FilePreview>), GetXamlTypeByName("Object"));
                AddToMapOfTypeToStandardName(typeof(global::System.Collections.ObjectModel.Collection<global::ATT.Controls.SubControls.FilePreview>),
                                                   "System.Collections.ObjectModel.Collection<ATT.Controls.SubControls.FilePreview>");
                userType.Activator = Activate_19_Collection;
                userType.CollectionAdd = VectorAdd_19_Collection;
                xamlType = userType;
                break;

            case "ATT.Controls.SubControls.FilePreview":
                userType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::ATT.Controls.SubControls.FilePreview), GetXamlTypeByName("Object"));
                userType.AddMemberName("File");
                userType.AddMemberName("DeleteFileCommand");
                xamlType = userType;
                break;

            case "System.Windows.Input.ICommand":
                userType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.Windows.Input.ICommand), null);
                xamlType = userType;
                break;

            case "ATT.Controls.Utility.NullVisibilityConverter":
                userType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::ATT.Controls.Utility.NullVisibilityConverter), GetXamlTypeByName("Object"));
                userType.Activator = Activate_22_NullVisibilityConverter;
                xamlType = userType;
                break;

            case "ATT.Controls.MmsControl":
                userType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::ATT.Controls.MmsControl), GetXamlTypeByName("ATT.Controls.SenderControlBase"));
                userType.Activator = Activate_23_MmsControl;
                userType.AddMemberName("FileOpenButtonStyle");
                userType.AddMemberName("AttachmentFiles");
                AddToMapOfTypeToStandardName(typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Windows.Storage.StorageFile>),
                                                   "System.Collections.ObjectModel.ObservableCollection<Windows.Storage.StorageFile>");
                xamlType = userType;
                break;

            case "ATT.Controls.SenderControlBase":
                userType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::ATT.Controls.SenderControlBase), GetXamlTypeByName("ATT.Controls.ControlWithPresenter"));
                userType.AddMemberName("PhoneNumberStyle");
                userType.AddMemberName("TextStyle");
                userType.AddMemberName("PhoneNumbers");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("Message");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                xamlType = userType;
                break;

            case "ATT.Controls.ControlWithPresenter":
                userType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::ATT.Controls.ControlWithPresenter), GetXamlTypeByName("ATT.Controls.AttControl"));
                xamlType = userType;
                break;

            case "ATT.Controls.AttControl":
                userType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::ATT.Controls.AttControl), GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.AddMemberName("Endpoint");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("ApiKey");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("SecretKey");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                xamlType = userType;
                break;

            case "ATT.Controls.SubControls.PhoneNumbersControl":
                userType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::ATT.Controls.SubControls.PhoneNumbersControl), GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_27_PhoneNumbersControl;
                userType.AddMemberName("TextPhoneNumber");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("PhoneNumberStyle");
                userType.AddMemberName("PhoneNumberLabel");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("UpdateBindedViewModelProperty");
                AddToMapOfTypeToStandardName(typeof(global::System.Action<global::System.String>),
                                                   "System.Action<String>");
                xamlType = userType;
                break;

            case "System.Action<String>":
                userType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.Action<global::System.String>), GetXamlTypeByName("System.MulticastDelegate"));
                AddToMapOfTypeToStandardName(typeof(global::System.Action<global::System.String>),
                                                   "System.Action<String>");
                xamlType = userType;
                break;

            case "System.MulticastDelegate":
                userType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.MulticastDelegate), GetXamlTypeByName("System.Delegate"));
                xamlType = userType;
                break;

            case "System.Delegate":
                userType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.Delegate), GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case "ATT.Controls.SubControls.MessageControl":
                userType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::ATT.Controls.SubControls.MessageControl), GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_31_MessageControl;
                userType.AddMemberName("TextHeader");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("TextMessage");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("MessageStatus");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("MessageTextStyle");
                userType.AddMemberName("MaxMessageLength");
                AddToMapOfTypeToStandardName(typeof(global::System.Int32),
                                                   "Int32");
                userType.AddMemberName("CurrentAttachSize");
                AddToMapOfTypeToStandardName(typeof(global::System.Int32),
                                                   "Int32");
                userType.AddMemberName("TotalMessageLength");
                AddToMapOfTypeToStandardName(typeof(global::System.Int32),
                                                   "Int32");
                userType.AddMemberName("ErrorMessage");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("MaxTextBoxLength");
                AddToMapOfTypeToStandardName(typeof(global::System.Int32),
                                                   "Int32");
                userType.AddMemberName("UpdateBindedViewModelProperty");
                AddToMapOfTypeToStandardName(typeof(global::System.Action<global::System.String>),
                                                   "System.Action<String>");
                xamlType = userType;
                break;

            case "ATT.Controls.MmsCouponControl":
                userType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::ATT.Controls.MmsCouponControl), GetXamlTypeByName("ATT.Controls.SenderControlBase"));
                userType.Activator = Activate_32_MmsCouponControl;
                userType.AddMemberName("FileOpenButtonStyle");
                userType.AddMemberName("File");
                xamlType = userType;
                break;

            case "ATT.Controls.SubControls.FileOpenPickerPreviewControl":
                userType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::ATT.Controls.SubControls.FileOpenPickerPreviewControl), GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_33_FileOpenPickerPreviewControl;
                userType.AddMemberName("File");
                userType.AddMemberName("MaxNewFilesSize");
                AddToMapOfTypeToStandardName(typeof(global::System.UInt64),
                                                   "UInt64");
                userType.AddMemberName("FileOpenButtonStyle");
                userType.AddMemberName("FileOpenButtonText");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("Presenter");
                userType.AddMemberName("ImagePreview");
                userType.AddMemberName("ClearCommand");
                userType.AddMemberName("ClearErrorFileCommand");
                xamlType = userType;
                break;

            case "ATT.Controls.Presenters.FileOpenPickerPreviewControlPresenter":
                userType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::ATT.Controls.Presenters.FileOpenPickerPreviewControlPresenter), GetXamlTypeByName("ATT.Controls.Utility.NotifyPropertyChangedBase"));
                userType.Activator = Activate_34_FileOpenPickerPreviewControlPresenter;
                xamlType = userType;
                break;

            case "ATT.Controls.Utility.NotifyPropertyChangedBase":
                userType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::ATT.Controls.Utility.NotifyPropertyChangedBase), GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case "ATT.Controls.SubControls.ExtendedTextBox":
                userType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::ATT.Controls.SubControls.ExtendedTextBox), GetXamlTypeByName("Windows.UI.Xaml.Controls.TextBox"));
                userType.Activator = Activate_36_ExtendedTextBox;
                userType.AddMemberName("CustomAction");
                AddToMapOfTypeToStandardName(typeof(global::System.Action<global::System.String>),
                                                   "System.Action<String>");
                xamlType = userType;
                break;

            case "ATT.Controls.SubControls.TextBoxValidationExtensions":
                userType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::ATT.Controls.SubControls.TextBoxValidationExtensions), GetXamlTypeByName("Object"));
                userType.AddMemberName("Format");
                userType.AddMemberName("IsValid");
                AddToMapOfTypeToStandardName(typeof(global::System.Boolean),
                                                   "Boolean");
                userType.AddMemberName("FormatValidationHandler");
                userType.AddMemberName("ValidBrush");
                userType.AddMemberName("InvalidBrush");
                xamlType = userType;
                break;

            case "ATT.Controls.SubControls.ValidTextBoxFormats":
                userType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::ATT.Controls.SubControls.ValidTextBoxFormats), GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Any", global::ATT.Controls.SubControls.ValidTextBoxFormats.Any);
                userType.AddEnumValue("NonEmpty", global::ATT.Controls.SubControls.ValidTextBoxFormats.NonEmpty);
                userType.AddEnumValue("Numeric", global::ATT.Controls.SubControls.ValidTextBoxFormats.Numeric);
                userType.AddEnumValue("NonEmptyNumeric", global::ATT.Controls.SubControls.ValidTextBoxFormats.NonEmptyNumeric);
                userType.AddEnumValue("Phone", global::ATT.Controls.SubControls.ValidTextBoxFormats.Phone);
                xamlType = userType;
                break;

            case "ATT.Controls.SubControls.TextBoxFormatValidationHandler":
                userType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::ATT.Controls.SubControls.TextBoxFormatValidationHandler), GetXamlTypeByName("Object"));
                userType.Activator = Activate_39_TextBoxFormatValidationHandler;
                xamlType = userType;
                break;

            case "ATT.Controls.SmsControl":
                userType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::ATT.Controls.SmsControl), GetXamlTypeByName("ATT.Controls.SenderControlBase"));
                userType.Activator = Activate_40_SmsControl;
                userType.AddMemberName("MaxSmsLength");
                AddToMapOfTypeToStandardName(typeof(global::System.Int32),
                                                   "Int32");
                xamlType = userType;
                break;

            case "ATT.Controls.SmsVotingControl":
                userType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::ATT.Controls.SmsVotingControl), GetXamlTypeByName("ATT.Controls.ControlWithPresenter"));
                userType.Activator = Activate_41_SmsVotingControl;
                userType.AddMemberName("SmsVotingStorage");
                userType.AddMemberName("SmsShortCode");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                xamlType = userType;
                break;

            case "ATT.Services.ISmsVotingStorage":
                userType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::ATT.Services.ISmsVotingStorage), null);
                xamlType = userType;
                break;

            case "ATT.Controls.SubControls.SmsVotingSubControls.SmsVotingChart":
                userType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::ATT.Controls.SubControls.SmsVotingSubControls.SmsVotingChart), GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_43_SmsVotingChart;
                userType.AddMemberName("ItemsSource");
                userType.AddMemberName("ForegroundBrush");
                userType.AddMemberName("DarkBarBrush");
                userType.AddMemberName("LightBarBrush");
                xamlType = userType;
                break;

            case "System.Collections.IEnumerable":
                userType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.Collections.IEnumerable), null);
                xamlType = userType;
                break;

            case "ATT.Controls.SpeechControl":
                userType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::ATT.Controls.SpeechControl), GetXamlTypeByName("ATT.Controls.ControlWithPresenter"));
                userType.Activator = Activate_45_SpeechControl;
                userType.AddMemberName("FileOpenPathStyle");
                userType.AddMemberName("FileOpenButtonStyle");
                userType.AddMemberName("TranscriptTextStyle");
                userType.AddMemberName("File");
                userType.AddMemberName("TranscriptMessage");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("ErrorMessage");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("IsNewMessageEnabled");
                AddToMapOfTypeToStandardName(typeof(global::System.Boolean),
                                                   "Boolean");
                xamlType = userType;
                break;

            case "Windows.UI.Color":
                userType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::Windows.UI.Color), GetXamlTypeByName("System.ValueType"));
                userType.AddMemberName("A");
                AddToMapOfTypeToStandardName(typeof(global::System.Byte),
                                                   "Byte");
                userType.AddMemberName("B");
                AddToMapOfTypeToStandardName(typeof(global::System.Byte),
                                                   "Byte");
                userType.AddMemberName("G");
                AddToMapOfTypeToStandardName(typeof(global::System.Byte),
                                                   "Byte");
                userType.AddMemberName("R");
                AddToMapOfTypeToStandardName(typeof(global::System.Byte),
                                                   "Byte");
                xamlType = userType;
                break;

            case "Byte":
                userType = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.Byte), GetXamlTypeByName("System.ValueType"));
                AddToMapOfTypeToStandardName(typeof(global::System.Byte),
                                                   "Byte");
                xamlType = userType;
                break;

            }
            return xamlType;
        }


        private object get_0_ErrorToolTip_ErrorMessage(object instance)
        {
            var that = (global::ATT.Controls.SubControls.ErrorToolTip)instance;
            return that.ErrorMessage;
        }
        private void set_0_ErrorToolTip_ErrorMessage(object instance, object Value)
        {
            var that = (global::ATT.Controls.SubControls.ErrorToolTip)instance;
            that.ErrorMessage = (global::System.String)Value;
        }
        private object get_1_FileOpenPickerControl_FileOpenCommand(object instance)
        {
            var that = (global::ATT.Controls.SubControls.FileOpenPickerControl)instance;
            return that.FileOpenCommand;
        }
        private object get_2_FileOpenPickerControl_ClearCommand(object instance)
        {
            var that = (global::ATT.Controls.SubControls.FileOpenPickerControl)instance;
            return that.ClearCommand;
        }
        private object get_3_FileOpenPickerControl_RemoveCommand(object instance)
        {
            var that = (global::ATT.Controls.SubControls.FileOpenPickerControl)instance;
            return that.RemoveCommand;
        }
        private object get_4_FileOpenPickerControl_ClearErrorFileCommand(object instance)
        {
            var that = (global::ATT.Controls.SubControls.FileOpenPickerControl)instance;
            return that.ClearErrorFileCommand;
        }
        private object get_5_FileOpenPickerControl_FileOpenPathStyle(object instance)
        {
            var that = (global::ATT.Controls.SubControls.FileOpenPickerControl)instance;
            return that.FileOpenPathStyle;
        }
        private void set_5_FileOpenPickerControl_FileOpenPathStyle(object instance, object Value)
        {
            var that = (global::ATT.Controls.SubControls.FileOpenPickerControl)instance;
            that.FileOpenPathStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_6_FileOpenPickerControl_FileOpenButtonStyle(object instance)
        {
            var that = (global::ATT.Controls.SubControls.FileOpenPickerControl)instance;
            return that.FileOpenButtonStyle;
        }
        private void set_6_FileOpenPickerControl_FileOpenButtonStyle(object instance, object Value)
        {
            var that = (global::ATT.Controls.SubControls.FileOpenPickerControl)instance;
            that.FileOpenButtonStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_7_FileOpenPickerControl_FileOpenButtonText(object instance)
        {
            var that = (global::ATT.Controls.SubControls.FileOpenPickerControl)instance;
            return that.FileOpenButtonText;
        }
        private void set_7_FileOpenPickerControl_FileOpenButtonText(object instance, object Value)
        {
            var that = (global::ATT.Controls.SubControls.FileOpenPickerControl)instance;
            that.FileOpenButtonText = (global::System.String)Value;
        }
        private object get_8_FileOpenPickerControl_FileType(object instance)
        {
            var that = (global::ATT.Controls.SubControls.FileOpenPickerControl)instance;
            return that.FileType;
        }
        private void set_8_FileOpenPickerControl_FileType(object instance, object Value)
        {
            var that = (global::ATT.Controls.SubControls.FileOpenPickerControl)instance;
            that.FileType = (global::ATT.Controls.FileType)Value;
        }
        private object get_9_FileOpenPickerControl_File(object instance)
        {
            var that = (global::ATT.Controls.SubControls.FileOpenPickerControl)instance;
            return that.File;
        }
        private void set_9_FileOpenPickerControl_File(object instance, object Value)
        {
            var that = (global::ATT.Controls.SubControls.FileOpenPickerControl)instance;
            that.File = (global::Windows.Storage.StorageFile)Value;
        }
        private object get_10_FileOpenPickerControl_Files(object instance)
        {
            var that = (global::ATT.Controls.SubControls.FileOpenPickerControl)instance;
            return that.Files;
        }
        private void set_10_FileOpenPickerControl_Files(object instance, object Value)
        {
            var that = (global::ATT.Controls.SubControls.FileOpenPickerControl)instance;
            that.Files = (global::System.Collections.ObjectModel.ObservableCollection<global::Windows.Storage.StorageFile>)Value;
        }
        private object get_11_StorageFile_ContentType(object instance)
        {
            var that = (global::Windows.Storage.StorageFile)instance;
            return that.ContentType;
        }
        private object get_12_StorageFile_FileType(object instance)
        {
            var that = (global::Windows.Storage.StorageFile)instance;
            return that.FileType;
        }
        private object get_13_StorageFile_Attributes(object instance)
        {
            var that = (global::Windows.Storage.StorageFile)instance;
            return that.Attributes;
        }
        private object get_14_StorageFile_DateCreated(object instance)
        {
            var that = (global::Windows.Storage.StorageFile)instance;
            return that.DateCreated;
        }
        private object get_15_StorageFile_Name(object instance)
        {
            var that = (global::Windows.Storage.StorageFile)instance;
            return that.Name;
        }
        private object get_16_StorageFile_Path(object instance)
        {
            var that = (global::Windows.Storage.StorageFile)instance;
            return that.Path;
        }
        private object get_17_StorageFile_DisplayName(object instance)
        {
            var that = (global::Windows.Storage.StorageFile)instance;
            return that.DisplayName;
        }
        private object get_18_StorageFile_DisplayType(object instance)
        {
            var that = (global::Windows.Storage.StorageFile)instance;
            return that.DisplayType;
        }
        private object get_19_StorageFile_FolderRelativeId(object instance)
        {
            var that = (global::Windows.Storage.StorageFile)instance;
            return that.FolderRelativeId;
        }
        private object get_20_StorageFile_Properties(object instance)
        {
            var that = (global::Windows.Storage.StorageFile)instance;
            return that.Properties;
        }
        private object get_21_StorageFile_FileFromPathAsync(object instance)
        {
            return global::Windows.Storage.StorageFile.GetFileFromPathAsync((global::System.String)instance);
        }
        private object get_22_StorageFile_FileFromApplicationUriAsync(object instance)
        {
            return global::Windows.Storage.StorageFile.GetFileFromApplicationUriAsync((global::System.Uri)instance);
        }
        private object get_23_Uri_AbsolutePath(object instance)
        {
            var that = (global::System.Uri)instance;
            return that.AbsolutePath;
        }
        private object get_24_Uri_AbsoluteUri(object instance)
        {
            var that = (global::System.Uri)instance;
            return that.AbsoluteUri;
        }
        private object get_25_Uri_Authority(object instance)
        {
            var that = (global::System.Uri)instance;
            return that.Authority;
        }
        private object get_26_Uri_DnsSafeHost(object instance)
        {
            var that = (global::System.Uri)instance;
            return that.DnsSafeHost;
        }
        private object get_27_Uri_Fragment(object instance)
        {
            var that = (global::System.Uri)instance;
            return that.Fragment;
        }
        private object get_28_Uri_Host(object instance)
        {
            var that = (global::System.Uri)instance;
            return that.Host;
        }
        private object get_29_Uri_HostNameType(object instance)
        {
            var that = (global::System.Uri)instance;
            return that.HostNameType;
        }
        private object get_30_Uri_IsAbsoluteUri(object instance)
        {
            var that = (global::System.Uri)instance;
            return that.IsAbsoluteUri;
        }
        private object get_31_Uri_IsDefaultPort(object instance)
        {
            var that = (global::System.Uri)instance;
            return that.IsDefaultPort;
        }
        private object get_32_Uri_IsFile(object instance)
        {
            var that = (global::System.Uri)instance;
            return that.IsFile;
        }
        private object get_33_Uri_IsLoopback(object instance)
        {
            var that = (global::System.Uri)instance;
            return that.IsLoopback;
        }
        private object get_34_Uri_IsUnc(object instance)
        {
            var that = (global::System.Uri)instance;
            return that.IsUnc;
        }
        private object get_35_Uri_LocalPath(object instance)
        {
            var that = (global::System.Uri)instance;
            return that.LocalPath;
        }
        private object get_36_Uri_OriginalString(object instance)
        {
            var that = (global::System.Uri)instance;
            return that.OriginalString;
        }
        private object get_37_Uri_PathAndQuery(object instance)
        {
            var that = (global::System.Uri)instance;
            return that.PathAndQuery;
        }
        private object get_38_Uri_Port(object instance)
        {
            var that = (global::System.Uri)instance;
            return that.Port;
        }
        private object get_39_Uri_Query(object instance)
        {
            var that = (global::System.Uri)instance;
            return that.Query;
        }
        private object get_40_Uri_Scheme(object instance)
        {
            var that = (global::System.Uri)instance;
            return that.Scheme;
        }
        private object get_41_Uri_Segments(object instance)
        {
            var that = (global::System.Uri)instance;
            return that.Segments;
        }
        private object get_42_Uri_UserEscaped(object instance)
        {
            var that = (global::System.Uri)instance;
            return that.UserEscaped;
        }
        private object get_43_Uri_UserInfo(object instance)
        {
            var that = (global::System.Uri)instance;
            return that.UserInfo;
        }
        private object get_44_FileOpenPickerControl_FilesExt(object instance)
        {
            var that = (global::ATT.Controls.SubControls.FileOpenPickerControl)instance;
            return that.FilesExt;
        }
        private object get_45_FilePreview_File(object instance)
        {
            var that = (global::ATT.Controls.SubControls.FilePreview)instance;
            return that.File;
        }
        private object get_46_FilePreview_DeleteFileCommand(object instance)
        {
            var that = (global::ATT.Controls.SubControls.FilePreview)instance;
            return that.DeleteFileCommand;
        }
        private object get_47_FileOpenPickerControl_SelectMultipleFiles(object instance)
        {
            var that = (global::ATT.Controls.SubControls.FileOpenPickerControl)instance;
            return that.SelectMultipleFiles;
        }
        private void set_47_FileOpenPickerControl_SelectMultipleFiles(object instance, object Value)
        {
            var that = (global::ATT.Controls.SubControls.FileOpenPickerControl)instance;
            that.SelectMultipleFiles = (global::System.Boolean)Value;
        }
        private object get_48_FileOpenPickerControl_ErrorMessage(object instance)
        {
            var that = (global::ATT.Controls.SubControls.FileOpenPickerControl)instance;
            return that.ErrorMessage;
        }
        private void set_48_FileOpenPickerControl_ErrorMessage(object instance, object Value)
        {
            var that = (global::ATT.Controls.SubControls.FileOpenPickerControl)instance;
            that.ErrorMessage = (global::System.String)Value;
        }
        private object get_49_FileOpenPickerControl_MaxNewFilesSize(object instance)
        {
            var that = (global::ATT.Controls.SubControls.FileOpenPickerControl)instance;
            return that.MaxNewFilesSize;
        }
        private void set_49_FileOpenPickerControl_MaxNewFilesSize(object instance, object Value)
        {
            var that = (global::ATT.Controls.SubControls.FileOpenPickerControl)instance;
            that.MaxNewFilesSize = (global::System.UInt64)Value;
        }
        private object get_50_MmsControl_FileOpenButtonStyle(object instance)
        {
            var that = (global::ATT.Controls.MmsControl)instance;
            return that.FileOpenButtonStyle;
        }
        private void set_50_MmsControl_FileOpenButtonStyle(object instance, object Value)
        {
            var that = (global::ATT.Controls.MmsControl)instance;
            that.FileOpenButtonStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_51_MmsControl_AttachmentFiles(object instance)
        {
            var that = (global::ATT.Controls.MmsControl)instance;
            return that.AttachmentFiles;
        }
        private void set_51_MmsControl_AttachmentFiles(object instance, object Value)
        {
            var that = (global::ATT.Controls.MmsControl)instance;
            that.AttachmentFiles = (global::System.Collections.ObjectModel.ObservableCollection<global::Windows.Storage.StorageFile>)Value;
        }
        private object get_52_SenderControlBase_PhoneNumberStyle(object instance)
        {
            var that = (global::ATT.Controls.SenderControlBase)instance;
            return that.PhoneNumberStyle;
        }
        private void set_52_SenderControlBase_PhoneNumberStyle(object instance, object Value)
        {
            var that = (global::ATT.Controls.SenderControlBase)instance;
            that.PhoneNumberStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_53_SenderControlBase_TextStyle(object instance)
        {
            var that = (global::ATT.Controls.SenderControlBase)instance;
            return that.TextStyle;
        }
        private void set_53_SenderControlBase_TextStyle(object instance, object Value)
        {
            var that = (global::ATT.Controls.SenderControlBase)instance;
            that.TextStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_54_SenderControlBase_PhoneNumbers(object instance)
        {
            var that = (global::ATT.Controls.SenderControlBase)instance;
            return that.PhoneNumbers;
        }
        private void set_54_SenderControlBase_PhoneNumbers(object instance, object Value)
        {
            var that = (global::ATT.Controls.SenderControlBase)instance;
            that.PhoneNumbers = (global::System.String)Value;
        }
        private object get_55_SenderControlBase_Message(object instance)
        {
            var that = (global::ATT.Controls.SenderControlBase)instance;
            return that.Message;
        }
        private void set_55_SenderControlBase_Message(object instance, object Value)
        {
            var that = (global::ATT.Controls.SenderControlBase)instance;
            that.Message = (global::System.String)Value;
        }
        private object get_56_AttControl_Endpoint(object instance)
        {
            var that = (global::ATT.Controls.AttControl)instance;
            return that.Endpoint;
        }
        private void set_56_AttControl_Endpoint(object instance, object Value)
        {
            var that = (global::ATT.Controls.AttControl)instance;
            that.Endpoint = (global::System.String)Value;
        }
        private object get_57_AttControl_ApiKey(object instance)
        {
            var that = (global::ATT.Controls.AttControl)instance;
            return that.ApiKey;
        }
        private void set_57_AttControl_ApiKey(object instance, object Value)
        {
            var that = (global::ATT.Controls.AttControl)instance;
            that.ApiKey = (global::System.String)Value;
        }
        private object get_58_AttControl_SecretKey(object instance)
        {
            var that = (global::ATT.Controls.AttControl)instance;
            return that.SecretKey;
        }
        private void set_58_AttControl_SecretKey(object instance, object Value)
        {
            var that = (global::ATT.Controls.AttControl)instance;
            that.SecretKey = (global::System.String)Value;
        }
        private object get_59_PhoneNumbersControl_TextPhoneNumber(object instance)
        {
            var that = (global::ATT.Controls.SubControls.PhoneNumbersControl)instance;
            return that.TextPhoneNumber;
        }
        private void set_59_PhoneNumbersControl_TextPhoneNumber(object instance, object Value)
        {
            var that = (global::ATT.Controls.SubControls.PhoneNumbersControl)instance;
            that.TextPhoneNumber = (global::System.String)Value;
        }
        private object get_60_PhoneNumbersControl_PhoneNumberStyle(object instance)
        {
            var that = (global::ATT.Controls.SubControls.PhoneNumbersControl)instance;
            return that.PhoneNumberStyle;
        }
        private void set_60_PhoneNumbersControl_PhoneNumberStyle(object instance, object Value)
        {
            var that = (global::ATT.Controls.SubControls.PhoneNumbersControl)instance;
            that.PhoneNumberStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_61_PhoneNumbersControl_PhoneNumberLabel(object instance)
        {
            var that = (global::ATT.Controls.SubControls.PhoneNumbersControl)instance;
            return that.PhoneNumberLabel;
        }
        private void set_61_PhoneNumbersControl_PhoneNumberLabel(object instance, object Value)
        {
            var that = (global::ATT.Controls.SubControls.PhoneNumbersControl)instance;
            that.PhoneNumberLabel = (global::System.String)Value;
        }
        private object get_62_PhoneNumbersControl_UpdateBindedViewModelProperty(object instance)
        {
            var that = (global::ATT.Controls.SubControls.PhoneNumbersControl)instance;
            return that.UpdateBindedViewModelProperty;
        }
        private object get_63_MessageControl_TextHeader(object instance)
        {
            var that = (global::ATT.Controls.SubControls.MessageControl)instance;
            return that.TextHeader;
        }
        private void set_63_MessageControl_TextHeader(object instance, object Value)
        {
            var that = (global::ATT.Controls.SubControls.MessageControl)instance;
            that.TextHeader = (global::System.String)Value;
        }
        private object get_64_MessageControl_TextMessage(object instance)
        {
            var that = (global::ATT.Controls.SubControls.MessageControl)instance;
            return that.TextMessage;
        }
        private void set_64_MessageControl_TextMessage(object instance, object Value)
        {
            var that = (global::ATT.Controls.SubControls.MessageControl)instance;
            that.TextMessage = (global::System.String)Value;
        }
        private object get_65_MessageControl_MessageStatus(object instance)
        {
            var that = (global::ATT.Controls.SubControls.MessageControl)instance;
            return that.MessageStatus;
        }
        private void set_65_MessageControl_MessageStatus(object instance, object Value)
        {
            var that = (global::ATT.Controls.SubControls.MessageControl)instance;
            that.MessageStatus = (global::System.String)Value;
        }
        private object get_66_MessageControl_MessageTextStyle(object instance)
        {
            var that = (global::ATT.Controls.SubControls.MessageControl)instance;
            return that.MessageTextStyle;
        }
        private void set_66_MessageControl_MessageTextStyle(object instance, object Value)
        {
            var that = (global::ATT.Controls.SubControls.MessageControl)instance;
            that.MessageTextStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_67_MessageControl_MaxMessageLength(object instance)
        {
            var that = (global::ATT.Controls.SubControls.MessageControl)instance;
            return that.MaxMessageLength;
        }
        private void set_67_MessageControl_MaxMessageLength(object instance, object Value)
        {
            var that = (global::ATT.Controls.SubControls.MessageControl)instance;
            that.MaxMessageLength = (global::System.Int32)Value;
        }
        private object get_68_MessageControl_CurrentAttachSize(object instance)
        {
            var that = (global::ATT.Controls.SubControls.MessageControl)instance;
            return that.CurrentAttachSize;
        }
        private void set_68_MessageControl_CurrentAttachSize(object instance, object Value)
        {
            var that = (global::ATT.Controls.SubControls.MessageControl)instance;
            that.CurrentAttachSize = (global::System.Int32)Value;
        }
        private object get_69_MessageControl_TotalMessageLength(object instance)
        {
            var that = (global::ATT.Controls.SubControls.MessageControl)instance;
            return that.TotalMessageLength;
        }
        private void set_69_MessageControl_TotalMessageLength(object instance, object Value)
        {
            var that = (global::ATT.Controls.SubControls.MessageControl)instance;
            that.TotalMessageLength = (global::System.Int32)Value;
        }
        private object get_70_MessageControl_ErrorMessage(object instance)
        {
            var that = (global::ATT.Controls.SubControls.MessageControl)instance;
            return that.ErrorMessage;
        }
        private void set_70_MessageControl_ErrorMessage(object instance, object Value)
        {
            var that = (global::ATT.Controls.SubControls.MessageControl)instance;
            that.ErrorMessage = (global::System.String)Value;
        }
        private object get_71_MessageControl_MaxTextBoxLength(object instance)
        {
            var that = (global::ATT.Controls.SubControls.MessageControl)instance;
            return that.MaxTextBoxLength;
        }
        private void set_71_MessageControl_MaxTextBoxLength(object instance, object Value)
        {
            var that = (global::ATT.Controls.SubControls.MessageControl)instance;
            that.MaxTextBoxLength = (global::System.Int32)Value;
        }
        private object get_72_MessageControl_UpdateBindedViewModelProperty(object instance)
        {
            var that = (global::ATT.Controls.SubControls.MessageControl)instance;
            return that.UpdateBindedViewModelProperty;
        }
        private object get_73_MmsCouponControl_FileOpenButtonStyle(object instance)
        {
            var that = (global::ATT.Controls.MmsCouponControl)instance;
            return that.FileOpenButtonStyle;
        }
        private void set_73_MmsCouponControl_FileOpenButtonStyle(object instance, object Value)
        {
            var that = (global::ATT.Controls.MmsCouponControl)instance;
            that.FileOpenButtonStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_74_MmsCouponControl_File(object instance)
        {
            var that = (global::ATT.Controls.MmsCouponControl)instance;
            return that.File;
        }
        private void set_74_MmsCouponControl_File(object instance, object Value)
        {
            var that = (global::ATT.Controls.MmsCouponControl)instance;
            that.File = (global::Windows.Storage.StorageFile)Value;
        }
        private object get_75_FileOpenPickerPreviewControl_File(object instance)
        {
            var that = (global::ATT.Controls.SubControls.FileOpenPickerPreviewControl)instance;
            return that.File;
        }
        private void set_75_FileOpenPickerPreviewControl_File(object instance, object Value)
        {
            var that = (global::ATT.Controls.SubControls.FileOpenPickerPreviewControl)instance;
            that.File = (global::Windows.Storage.StorageFile)Value;
        }
        private object get_76_FileOpenPickerPreviewControl_MaxNewFilesSize(object instance)
        {
            var that = (global::ATT.Controls.SubControls.FileOpenPickerPreviewControl)instance;
            return that.MaxNewFilesSize;
        }
        private void set_76_FileOpenPickerPreviewControl_MaxNewFilesSize(object instance, object Value)
        {
            var that = (global::ATT.Controls.SubControls.FileOpenPickerPreviewControl)instance;
            that.MaxNewFilesSize = (global::System.UInt64)Value;
        }
        private object get_77_FileOpenPickerPreviewControl_FileOpenButtonStyle(object instance)
        {
            var that = (global::ATT.Controls.SubControls.FileOpenPickerPreviewControl)instance;
            return that.FileOpenButtonStyle;
        }
        private void set_77_FileOpenPickerPreviewControl_FileOpenButtonStyle(object instance, object Value)
        {
            var that = (global::ATT.Controls.SubControls.FileOpenPickerPreviewControl)instance;
            that.FileOpenButtonStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_78_FileOpenPickerPreviewControl_FileOpenButtonText(object instance)
        {
            var that = (global::ATT.Controls.SubControls.FileOpenPickerPreviewControl)instance;
            return that.FileOpenButtonText;
        }
        private void set_78_FileOpenPickerPreviewControl_FileOpenButtonText(object instance, object Value)
        {
            var that = (global::ATT.Controls.SubControls.FileOpenPickerPreviewControl)instance;
            that.FileOpenButtonText = (global::System.String)Value;
        }
        private object get_79_FileOpenPickerPreviewControl_Presenter(object instance)
        {
            var that = (global::ATT.Controls.SubControls.FileOpenPickerPreviewControl)instance;
            return that.Presenter;
        }
        private object get_80_FileOpenPickerPreviewControl_ImagePreview(object instance)
        {
            var that = (global::ATT.Controls.SubControls.FileOpenPickerPreviewControl)instance;
            return that.ImagePreview;
        }
        private void set_80_FileOpenPickerPreviewControl_ImagePreview(object instance, object Value)
        {
            var that = (global::ATT.Controls.SubControls.FileOpenPickerPreviewControl)instance;
            that.ImagePreview = (global::Windows.UI.Xaml.Media.Imaging.BitmapImage)Value;
        }
        private object get_81_FileOpenPickerPreviewControl_ClearCommand(object instance)
        {
            var that = (global::ATT.Controls.SubControls.FileOpenPickerPreviewControl)instance;
            return that.ClearCommand;
        }
        private object get_82_FileOpenPickerPreviewControl_ClearErrorFileCommand(object instance)
        {
            var that = (global::ATT.Controls.SubControls.FileOpenPickerPreviewControl)instance;
            return that.ClearErrorFileCommand;
        }
        private object get_83_ExtendedTextBox_CustomAction(object instance)
        {
            var that = (global::ATT.Controls.SubControls.ExtendedTextBox)instance;
            return that.CustomAction;
        }
        private void set_83_ExtendedTextBox_CustomAction(object instance, object Value)
        {
            var that = (global::ATT.Controls.SubControls.ExtendedTextBox)instance;
            that.CustomAction = (global::System.Action<global::System.String>)Value;
        }
        private object get_84_TextBoxValidationExtensions_Format(object instance)
        {
            return global::ATT.Controls.SubControls.TextBoxValidationExtensions.GetFormat((global::Windows.UI.Xaml.DependencyObject)instance);
        }
        private void set_84_TextBoxValidationExtensions_Format(object instance, object Value)
        {
            global::ATT.Controls.SubControls.TextBoxValidationExtensions.SetFormat((global::Windows.UI.Xaml.DependencyObject)instance, (ATT.Controls.SubControls.ValidTextBoxFormats)Value);
                    }
        private object get_85_TextBoxValidationExtensions_IsValid(object instance)
        {
            return global::ATT.Controls.SubControls.TextBoxValidationExtensions.GetIsValid((global::Windows.UI.Xaml.DependencyObject)instance);
        }
        private void set_85_TextBoxValidationExtensions_IsValid(object instance, object Value)
        {
            global::ATT.Controls.SubControls.TextBoxValidationExtensions.SetIsValid((global::Windows.UI.Xaml.DependencyObject)instance, (System.Boolean)Value);
                    }
        private object get_86_TextBoxValidationExtensions_FormatValidationHandler(object instance)
        {
            return global::ATT.Controls.SubControls.TextBoxValidationExtensions.GetFormatValidationHandler((global::Windows.UI.Xaml.DependencyObject)instance);
        }
        private void set_86_TextBoxValidationExtensions_FormatValidationHandler(object instance, object Value)
        {
            global::ATT.Controls.SubControls.TextBoxValidationExtensions.SetFormatValidationHandler((global::Windows.UI.Xaml.DependencyObject)instance, (ATT.Controls.SubControls.TextBoxFormatValidationHandler)Value);
                    }
        private object get_87_TextBoxValidationExtensions_ValidBrush(object instance)
        {
            return global::ATT.Controls.SubControls.TextBoxValidationExtensions.GetValidBrush((global::Windows.UI.Xaml.DependencyObject)instance);
        }
        private void set_87_TextBoxValidationExtensions_ValidBrush(object instance, object Value)
        {
            global::ATT.Controls.SubControls.TextBoxValidationExtensions.SetValidBrush((global::Windows.UI.Xaml.DependencyObject)instance, (Windows.UI.Xaml.Media.Brush)Value);
                    }
        private object get_88_TextBoxValidationExtensions_InvalidBrush(object instance)
        {
            return global::ATT.Controls.SubControls.TextBoxValidationExtensions.GetInvalidBrush((global::Windows.UI.Xaml.DependencyObject)instance);
        }
        private void set_88_TextBoxValidationExtensions_InvalidBrush(object instance, object Value)
        {
            global::ATT.Controls.SubControls.TextBoxValidationExtensions.SetInvalidBrush((global::Windows.UI.Xaml.DependencyObject)instance, (Windows.UI.Xaml.Media.Brush)Value);
                    }
        private object get_89_SmsControl_MaxSmsLength(object instance)
        {
            var that = (global::ATT.Controls.SmsControl)instance;
            return that.MaxSmsLength;
        }
        private void set_89_SmsControl_MaxSmsLength(object instance, object Value)
        {
            var that = (global::ATT.Controls.SmsControl)instance;
            that.MaxSmsLength = (global::System.Int32)Value;
        }
        private object get_90_SmsVotingControl_SmsVotingStorage(object instance)
        {
            var that = (global::ATT.Controls.SmsVotingControl)instance;
            return that.SmsVotingStorage;
        }
        private void set_90_SmsVotingControl_SmsVotingStorage(object instance, object Value)
        {
            var that = (global::ATT.Controls.SmsVotingControl)instance;
            that.SmsVotingStorage = (global::ATT.Services.ISmsVotingStorage)Value;
        }
        private object get_91_SmsVotingControl_SmsShortCode(object instance)
        {
            var that = (global::ATT.Controls.SmsVotingControl)instance;
            return that.SmsShortCode;
        }
        private void set_91_SmsVotingControl_SmsShortCode(object instance, object Value)
        {
            var that = (global::ATT.Controls.SmsVotingControl)instance;
            that.SmsShortCode = (global::System.String)Value;
        }
        private object get_92_SmsVotingChart_ItemsSource(object instance)
        {
            var that = (global::ATT.Controls.SubControls.SmsVotingSubControls.SmsVotingChart)instance;
            return that.ItemsSource;
        }
        private void set_92_SmsVotingChart_ItemsSource(object instance, object Value)
        {
            var that = (global::ATT.Controls.SubControls.SmsVotingSubControls.SmsVotingChart)instance;
            that.ItemsSource = (global::System.Collections.IEnumerable)Value;
        }
        private object get_93_SmsVotingChart_ForegroundBrush(object instance)
        {
            var that = (global::ATT.Controls.SubControls.SmsVotingSubControls.SmsVotingChart)instance;
            return that.ForegroundBrush;
        }
        private void set_93_SmsVotingChart_ForegroundBrush(object instance, object Value)
        {
            var that = (global::ATT.Controls.SubControls.SmsVotingSubControls.SmsVotingChart)instance;
            that.ForegroundBrush = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_94_SmsVotingChart_DarkBarBrush(object instance)
        {
            var that = (global::ATT.Controls.SubControls.SmsVotingSubControls.SmsVotingChart)instance;
            return that.DarkBarBrush;
        }
        private void set_94_SmsVotingChart_DarkBarBrush(object instance, object Value)
        {
            var that = (global::ATT.Controls.SubControls.SmsVotingSubControls.SmsVotingChart)instance;
            that.DarkBarBrush = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_95_SmsVotingChart_LightBarBrush(object instance)
        {
            var that = (global::ATT.Controls.SubControls.SmsVotingSubControls.SmsVotingChart)instance;
            return that.LightBarBrush;
        }
        private void set_95_SmsVotingChart_LightBarBrush(object instance, object Value)
        {
            var that = (global::ATT.Controls.SubControls.SmsVotingSubControls.SmsVotingChart)instance;
            that.LightBarBrush = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_96_SpeechControl_FileOpenPathStyle(object instance)
        {
            var that = (global::ATT.Controls.SpeechControl)instance;
            return that.FileOpenPathStyle;
        }
        private void set_96_SpeechControl_FileOpenPathStyle(object instance, object Value)
        {
            var that = (global::ATT.Controls.SpeechControl)instance;
            that.FileOpenPathStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_97_SpeechControl_FileOpenButtonStyle(object instance)
        {
            var that = (global::ATT.Controls.SpeechControl)instance;
            return that.FileOpenButtonStyle;
        }
        private void set_97_SpeechControl_FileOpenButtonStyle(object instance, object Value)
        {
            var that = (global::ATT.Controls.SpeechControl)instance;
            that.FileOpenButtonStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_98_SpeechControl_TranscriptTextStyle(object instance)
        {
            var that = (global::ATT.Controls.SpeechControl)instance;
            return that.TranscriptTextStyle;
        }
        private void set_98_SpeechControl_TranscriptTextStyle(object instance, object Value)
        {
            var that = (global::ATT.Controls.SpeechControl)instance;
            that.TranscriptTextStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_99_SpeechControl_File(object instance)
        {
            var that = (global::ATT.Controls.SpeechControl)instance;
            return that.File;
        }
        private void set_99_SpeechControl_File(object instance, object Value)
        {
            var that = (global::ATT.Controls.SpeechControl)instance;
            that.File = (global::Windows.Storage.StorageFile)Value;
        }
        private object get_100_SpeechControl_TranscriptMessage(object instance)
        {
            var that = (global::ATT.Controls.SpeechControl)instance;
            return that.TranscriptMessage;
        }
        private object get_101_SpeechControl_ErrorMessage(object instance)
        {
            var that = (global::ATT.Controls.SpeechControl)instance;
            return that.ErrorMessage;
        }
        private object get_102_SpeechControl_IsNewMessageEnabled(object instance)
        {
            var that = (global::ATT.Controls.SpeechControl)instance;
            return that.IsNewMessageEnabled;
        }
        private object get_103_Color_A(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.A;
        }
        private void set_103_Color_A(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.A = (global::System.Byte)Value;
        }
        private object get_104_Color_B(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.B;
        }
        private void set_104_Color_B(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.B = (global::System.Byte)Value;
        }
        private object get_105_Color_G(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.G;
        }
        private void set_105_Color_G(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.G = (global::System.Byte)Value;
        }
        private object get_106_Color_R(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.R;
        }
        private void set_106_Color_R(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.R = (global::System.Byte)Value;
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember xamlMember = null;
            global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "ATT.Controls.SubControls.ErrorToolTip.ErrorMessage":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SubControls.ErrorToolTip");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "ErrorMessage", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_0_ErrorToolTip_ErrorMessage;
                xamlMember.Setter = set_0_ErrorToolTip_ErrorMessage;
                break;
            case "ATT.Controls.SubControls.FileOpenPickerControl.FileOpenCommand":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SubControls.FileOpenPickerControl");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "FileOpenCommand", "ATT.Controls.Utility.RelayCommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_1_FileOpenPickerControl_FileOpenCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "ATT.Controls.SubControls.FileOpenPickerControl.ClearCommand":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SubControls.FileOpenPickerControl");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "ClearCommand", "ATT.Controls.Utility.RelayCommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_2_FileOpenPickerControl_ClearCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "ATT.Controls.SubControls.FileOpenPickerControl.RemoveCommand":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SubControls.FileOpenPickerControl");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "RemoveCommand", "ATT.Controls.Utility.RelayCommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_3_FileOpenPickerControl_RemoveCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "ATT.Controls.SubControls.FileOpenPickerControl.ClearErrorFileCommand":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SubControls.FileOpenPickerControl");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "ClearErrorFileCommand", "ATT.Controls.Utility.RelayCommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_4_FileOpenPickerControl_ClearErrorFileCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "ATT.Controls.SubControls.FileOpenPickerControl.FileOpenPathStyle":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SubControls.FileOpenPickerControl");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "FileOpenPathStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_5_FileOpenPickerControl_FileOpenPathStyle;
                xamlMember.Setter = set_5_FileOpenPickerControl_FileOpenPathStyle;
                break;
            case "ATT.Controls.SubControls.FileOpenPickerControl.FileOpenButtonStyle":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SubControls.FileOpenPickerControl");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "FileOpenButtonStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_6_FileOpenPickerControl_FileOpenButtonStyle;
                xamlMember.Setter = set_6_FileOpenPickerControl_FileOpenButtonStyle;
                break;
            case "ATT.Controls.SubControls.FileOpenPickerControl.FileOpenButtonText":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SubControls.FileOpenPickerControl");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "FileOpenButtonText", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_7_FileOpenPickerControl_FileOpenButtonText;
                xamlMember.Setter = set_7_FileOpenPickerControl_FileOpenButtonText;
                break;
            case "ATT.Controls.SubControls.FileOpenPickerControl.FileType":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SubControls.FileOpenPickerControl");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "FileType", "ATT.Controls.FileType");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_8_FileOpenPickerControl_FileType;
                xamlMember.Setter = set_8_FileOpenPickerControl_FileType;
                break;
            case "ATT.Controls.SubControls.FileOpenPickerControl.File":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SubControls.FileOpenPickerControl");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "File", "Windows.Storage.StorageFile");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_9_FileOpenPickerControl_File;
                xamlMember.Setter = set_9_FileOpenPickerControl_File;
                break;
            case "ATT.Controls.SubControls.FileOpenPickerControl.Files":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SubControls.FileOpenPickerControl");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "Files", "System.Collections.ObjectModel.ObservableCollection<Windows.Storage.StorageFile>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_10_FileOpenPickerControl_Files;
                xamlMember.Setter = set_10_FileOpenPickerControl_Files;
                break;
            case "Windows.Storage.StorageFile.ContentType":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.Storage.StorageFile");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "ContentType", "String");
                xamlMember.Getter = get_11_StorageFile_ContentType;
                xamlMember.SetIsReadOnly();
                break;
            case "Windows.Storage.StorageFile.FileType":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.Storage.StorageFile");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "FileType", "String");
                xamlMember.Getter = get_12_StorageFile_FileType;
                xamlMember.SetIsReadOnly();
                break;
            case "Windows.Storage.StorageFile.Attributes":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.Storage.StorageFile");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "Attributes", "Windows.Storage.FileAttributes");
                xamlMember.Getter = get_13_StorageFile_Attributes;
                xamlMember.SetIsReadOnly();
                break;
            case "Windows.Storage.StorageFile.DateCreated":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.Storage.StorageFile");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "DateCreated", "System.DateTimeOffset");
                xamlMember.Getter = get_14_StorageFile_DateCreated;
                xamlMember.SetIsReadOnly();
                break;
            case "Windows.Storage.StorageFile.Name":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.Storage.StorageFile");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "Name", "String");
                xamlMember.Getter = get_15_StorageFile_Name;
                xamlMember.SetIsReadOnly();
                break;
            case "Windows.Storage.StorageFile.Path":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.Storage.StorageFile");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "Path", "String");
                xamlMember.Getter = get_16_StorageFile_Path;
                xamlMember.SetIsReadOnly();
                break;
            case "Windows.Storage.StorageFile.DisplayName":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.Storage.StorageFile");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "DisplayName", "String");
                xamlMember.Getter = get_17_StorageFile_DisplayName;
                xamlMember.SetIsReadOnly();
                break;
            case "Windows.Storage.StorageFile.DisplayType":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.Storage.StorageFile");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "DisplayType", "String");
                xamlMember.Getter = get_18_StorageFile_DisplayType;
                xamlMember.SetIsReadOnly();
                break;
            case "Windows.Storage.StorageFile.FolderRelativeId":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.Storage.StorageFile");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "FolderRelativeId", "String");
                xamlMember.Getter = get_19_StorageFile_FolderRelativeId;
                xamlMember.SetIsReadOnly();
                break;
            case "Windows.Storage.StorageFile.Properties":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.Storage.StorageFile");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "Properties", "Windows.Storage.FileProperties.StorageItemContentProperties");
                xamlMember.Getter = get_20_StorageFile_Properties;
                xamlMember.SetIsReadOnly();
                break;
            case "Windows.Storage.StorageFile.FileFromPathAsync":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.Storage.StorageFile");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "FileFromPathAsync", "Windows.Foundation.IAsyncOperation<Windows.Storage.StorageFile>");
                xamlMember.SetTargetTypeName("String");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_21_StorageFile_FileFromPathAsync;
                xamlMember.SetIsReadOnly();
                break;
            case "Windows.Storage.StorageFile.FileFromApplicationUriAsync":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.Storage.StorageFile");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "FileFromApplicationUriAsync", "Windows.Foundation.IAsyncOperation<Windows.Storage.StorageFile>");
                xamlMember.SetTargetTypeName("System.Uri");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_22_StorageFile_FileFromApplicationUriAsync;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Uri.AbsolutePath":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Uri");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "AbsolutePath", "String");
                xamlMember.Getter = get_23_Uri_AbsolutePath;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Uri.AbsoluteUri":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Uri");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "AbsoluteUri", "String");
                xamlMember.Getter = get_24_Uri_AbsoluteUri;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Uri.Authority":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Uri");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "Authority", "String");
                xamlMember.Getter = get_25_Uri_Authority;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Uri.DnsSafeHost":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Uri");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "DnsSafeHost", "String");
                xamlMember.Getter = get_26_Uri_DnsSafeHost;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Uri.Fragment":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Uri");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "Fragment", "String");
                xamlMember.Getter = get_27_Uri_Fragment;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Uri.Host":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Uri");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "Host", "String");
                xamlMember.Getter = get_28_Uri_Host;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Uri.HostNameType":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Uri");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "HostNameType", "System.UriHostNameType");
                xamlMember.Getter = get_29_Uri_HostNameType;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Uri.IsAbsoluteUri":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Uri");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "IsAbsoluteUri", "Boolean");
                xamlMember.Getter = get_30_Uri_IsAbsoluteUri;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Uri.IsDefaultPort":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Uri");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "IsDefaultPort", "Boolean");
                xamlMember.Getter = get_31_Uri_IsDefaultPort;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Uri.IsFile":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Uri");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "IsFile", "Boolean");
                xamlMember.Getter = get_32_Uri_IsFile;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Uri.IsLoopback":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Uri");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "IsLoopback", "Boolean");
                xamlMember.Getter = get_33_Uri_IsLoopback;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Uri.IsUnc":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Uri");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "IsUnc", "Boolean");
                xamlMember.Getter = get_34_Uri_IsUnc;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Uri.LocalPath":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Uri");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "LocalPath", "String");
                xamlMember.Getter = get_35_Uri_LocalPath;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Uri.OriginalString":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Uri");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "OriginalString", "String");
                xamlMember.Getter = get_36_Uri_OriginalString;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Uri.PathAndQuery":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Uri");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "PathAndQuery", "String");
                xamlMember.Getter = get_37_Uri_PathAndQuery;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Uri.Port":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Uri");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "Port", "Int32");
                xamlMember.Getter = get_38_Uri_Port;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Uri.Query":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Uri");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "Query", "String");
                xamlMember.Getter = get_39_Uri_Query;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Uri.Scheme":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Uri");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "Scheme", "String");
                xamlMember.Getter = get_40_Uri_Scheme;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Uri.Segments":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Uri");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "Segments", "String[]");
                xamlMember.Getter = get_41_Uri_Segments;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Uri.UserEscaped":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Uri");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "UserEscaped", "Boolean");
                xamlMember.Getter = get_42_Uri_UserEscaped;
                xamlMember.SetIsReadOnly();
                break;
            case "System.Uri.UserInfo":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Uri");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "UserInfo", "String");
                xamlMember.Getter = get_43_Uri_UserInfo;
                xamlMember.SetIsReadOnly();
                break;
            case "ATT.Controls.SubControls.FileOpenPickerControl.FilesExt":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SubControls.FileOpenPickerControl");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "FilesExt", "System.Collections.ObjectModel.ObservableCollection<ATT.Controls.SubControls.FilePreview>");
                xamlMember.Getter = get_44_FileOpenPickerControl_FilesExt;
                xamlMember.SetIsReadOnly();
                break;
            case "ATT.Controls.SubControls.FilePreview.File":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SubControls.FilePreview");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "File", "Windows.Storage.StorageFile");
                xamlMember.Getter = get_45_FilePreview_File;
                xamlMember.SetIsReadOnly();
                break;
            case "ATT.Controls.SubControls.FilePreview.DeleteFileCommand":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SubControls.FilePreview");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "DeleteFileCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_46_FilePreview_DeleteFileCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "ATT.Controls.SubControls.FileOpenPickerControl.SelectMultipleFiles":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SubControls.FileOpenPickerControl");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "SelectMultipleFiles", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_47_FileOpenPickerControl_SelectMultipleFiles;
                xamlMember.Setter = set_47_FileOpenPickerControl_SelectMultipleFiles;
                break;
            case "ATT.Controls.SubControls.FileOpenPickerControl.ErrorMessage":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SubControls.FileOpenPickerControl");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "ErrorMessage", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_48_FileOpenPickerControl_ErrorMessage;
                xamlMember.Setter = set_48_FileOpenPickerControl_ErrorMessage;
                break;
            case "ATT.Controls.SubControls.FileOpenPickerControl.MaxNewFilesSize":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SubControls.FileOpenPickerControl");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "MaxNewFilesSize", "UInt64");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_49_FileOpenPickerControl_MaxNewFilesSize;
                xamlMember.Setter = set_49_FileOpenPickerControl_MaxNewFilesSize;
                break;
            case "ATT.Controls.MmsControl.FileOpenButtonStyle":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.MmsControl");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "FileOpenButtonStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_50_MmsControl_FileOpenButtonStyle;
                xamlMember.Setter = set_50_MmsControl_FileOpenButtonStyle;
                break;
            case "ATT.Controls.MmsControl.AttachmentFiles":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.MmsControl");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "AttachmentFiles", "System.Collections.ObjectModel.ObservableCollection<Windows.Storage.StorageFile>");
                xamlMember.Getter = get_51_MmsControl_AttachmentFiles;
                xamlMember.Setter = set_51_MmsControl_AttachmentFiles;
                break;
            case "ATT.Controls.SenderControlBase.PhoneNumberStyle":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SenderControlBase");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "PhoneNumberStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_52_SenderControlBase_PhoneNumberStyle;
                xamlMember.Setter = set_52_SenderControlBase_PhoneNumberStyle;
                break;
            case "ATT.Controls.SenderControlBase.TextStyle":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SenderControlBase");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "TextStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_53_SenderControlBase_TextStyle;
                xamlMember.Setter = set_53_SenderControlBase_TextStyle;
                break;
            case "ATT.Controls.SenderControlBase.PhoneNumbers":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SenderControlBase");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "PhoneNumbers", "String");
                xamlMember.Getter = get_54_SenderControlBase_PhoneNumbers;
                xamlMember.Setter = set_54_SenderControlBase_PhoneNumbers;
                break;
            case "ATT.Controls.SenderControlBase.Message":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SenderControlBase");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "Message", "String");
                xamlMember.Getter = get_55_SenderControlBase_Message;
                xamlMember.Setter = set_55_SenderControlBase_Message;
                break;
            case "ATT.Controls.AttControl.Endpoint":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.AttControl");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "Endpoint", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_56_AttControl_Endpoint;
                xamlMember.Setter = set_56_AttControl_Endpoint;
                break;
            case "ATT.Controls.AttControl.ApiKey":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.AttControl");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "ApiKey", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_57_AttControl_ApiKey;
                xamlMember.Setter = set_57_AttControl_ApiKey;
                break;
            case "ATT.Controls.AttControl.SecretKey":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.AttControl");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "SecretKey", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_58_AttControl_SecretKey;
                xamlMember.Setter = set_58_AttControl_SecretKey;
                break;
            case "ATT.Controls.SubControls.PhoneNumbersControl.TextPhoneNumber":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SubControls.PhoneNumbersControl");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "TextPhoneNumber", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_59_PhoneNumbersControl_TextPhoneNumber;
                xamlMember.Setter = set_59_PhoneNumbersControl_TextPhoneNumber;
                break;
            case "ATT.Controls.SubControls.PhoneNumbersControl.PhoneNumberStyle":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SubControls.PhoneNumbersControl");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "PhoneNumberStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_60_PhoneNumbersControl_PhoneNumberStyle;
                xamlMember.Setter = set_60_PhoneNumbersControl_PhoneNumberStyle;
                break;
            case "ATT.Controls.SubControls.PhoneNumbersControl.PhoneNumberLabel":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SubControls.PhoneNumbersControl");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "PhoneNumberLabel", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_61_PhoneNumbersControl_PhoneNumberLabel;
                xamlMember.Setter = set_61_PhoneNumbersControl_PhoneNumberLabel;
                break;
            case "ATT.Controls.SubControls.PhoneNumbersControl.UpdateBindedViewModelProperty":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SubControls.PhoneNumbersControl");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "UpdateBindedViewModelProperty", "System.Action<String>");
                xamlMember.Getter = get_62_PhoneNumbersControl_UpdateBindedViewModelProperty;
                xamlMember.SetIsReadOnly();
                break;
            case "ATT.Controls.SubControls.MessageControl.TextHeader":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SubControls.MessageControl");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "TextHeader", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_63_MessageControl_TextHeader;
                xamlMember.Setter = set_63_MessageControl_TextHeader;
                break;
            case "ATT.Controls.SubControls.MessageControl.TextMessage":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SubControls.MessageControl");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "TextMessage", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_64_MessageControl_TextMessage;
                xamlMember.Setter = set_64_MessageControl_TextMessage;
                break;
            case "ATT.Controls.SubControls.MessageControl.MessageStatus":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SubControls.MessageControl");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "MessageStatus", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_65_MessageControl_MessageStatus;
                xamlMember.Setter = set_65_MessageControl_MessageStatus;
                break;
            case "ATT.Controls.SubControls.MessageControl.MessageTextStyle":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SubControls.MessageControl");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "MessageTextStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_66_MessageControl_MessageTextStyle;
                xamlMember.Setter = set_66_MessageControl_MessageTextStyle;
                break;
            case "ATT.Controls.SubControls.MessageControl.MaxMessageLength":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SubControls.MessageControl");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "MaxMessageLength", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_67_MessageControl_MaxMessageLength;
                xamlMember.Setter = set_67_MessageControl_MaxMessageLength;
                break;
            case "ATT.Controls.SubControls.MessageControl.CurrentAttachSize":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SubControls.MessageControl");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "CurrentAttachSize", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_68_MessageControl_CurrentAttachSize;
                xamlMember.Setter = set_68_MessageControl_CurrentAttachSize;
                break;
            case "ATT.Controls.SubControls.MessageControl.TotalMessageLength":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SubControls.MessageControl");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "TotalMessageLength", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_69_MessageControl_TotalMessageLength;
                xamlMember.Setter = set_69_MessageControl_TotalMessageLength;
                break;
            case "ATT.Controls.SubControls.MessageControl.ErrorMessage":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SubControls.MessageControl");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "ErrorMessage", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_70_MessageControl_ErrorMessage;
                xamlMember.Setter = set_70_MessageControl_ErrorMessage;
                break;
            case "ATT.Controls.SubControls.MessageControl.MaxTextBoxLength":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SubControls.MessageControl");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "MaxTextBoxLength", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_71_MessageControl_MaxTextBoxLength;
                xamlMember.Setter = set_71_MessageControl_MaxTextBoxLength;
                break;
            case "ATT.Controls.SubControls.MessageControl.UpdateBindedViewModelProperty":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SubControls.MessageControl");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "UpdateBindedViewModelProperty", "System.Action<String>");
                xamlMember.Getter = get_72_MessageControl_UpdateBindedViewModelProperty;
                xamlMember.SetIsReadOnly();
                break;
            case "ATT.Controls.MmsCouponControl.FileOpenButtonStyle":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.MmsCouponControl");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "FileOpenButtonStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_73_MmsCouponControl_FileOpenButtonStyle;
                xamlMember.Setter = set_73_MmsCouponControl_FileOpenButtonStyle;
                break;
            case "ATT.Controls.MmsCouponControl.File":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.MmsCouponControl");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "File", "Windows.Storage.StorageFile");
                xamlMember.Getter = get_74_MmsCouponControl_File;
                xamlMember.Setter = set_74_MmsCouponControl_File;
                break;
            case "ATT.Controls.SubControls.FileOpenPickerPreviewControl.File":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SubControls.FileOpenPickerPreviewControl");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "File", "Windows.Storage.StorageFile");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_75_FileOpenPickerPreviewControl_File;
                xamlMember.Setter = set_75_FileOpenPickerPreviewControl_File;
                break;
            case "ATT.Controls.SubControls.FileOpenPickerPreviewControl.MaxNewFilesSize":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SubControls.FileOpenPickerPreviewControl");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "MaxNewFilesSize", "UInt64");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_76_FileOpenPickerPreviewControl_MaxNewFilesSize;
                xamlMember.Setter = set_76_FileOpenPickerPreviewControl_MaxNewFilesSize;
                break;
            case "ATT.Controls.SubControls.FileOpenPickerPreviewControl.FileOpenButtonStyle":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SubControls.FileOpenPickerPreviewControl");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "FileOpenButtonStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_77_FileOpenPickerPreviewControl_FileOpenButtonStyle;
                xamlMember.Setter = set_77_FileOpenPickerPreviewControl_FileOpenButtonStyle;
                break;
            case "ATT.Controls.SubControls.FileOpenPickerPreviewControl.FileOpenButtonText":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SubControls.FileOpenPickerPreviewControl");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "FileOpenButtonText", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_78_FileOpenPickerPreviewControl_FileOpenButtonText;
                xamlMember.Setter = set_78_FileOpenPickerPreviewControl_FileOpenButtonText;
                break;
            case "ATT.Controls.SubControls.FileOpenPickerPreviewControl.Presenter":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SubControls.FileOpenPickerPreviewControl");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "Presenter", "ATT.Controls.Presenters.FileOpenPickerPreviewControlPresenter");
                xamlMember.Getter = get_79_FileOpenPickerPreviewControl_Presenter;
                xamlMember.SetIsReadOnly();
                break;
            case "ATT.Controls.SubControls.FileOpenPickerPreviewControl.ImagePreview":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SubControls.FileOpenPickerPreviewControl");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "ImagePreview", "Windows.UI.Xaml.Media.Imaging.BitmapImage");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_80_FileOpenPickerPreviewControl_ImagePreview;
                xamlMember.Setter = set_80_FileOpenPickerPreviewControl_ImagePreview;
                break;
            case "ATT.Controls.SubControls.FileOpenPickerPreviewControl.ClearCommand":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SubControls.FileOpenPickerPreviewControl");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "ClearCommand", "ATT.Controls.Utility.RelayCommand");
                xamlMember.Getter = get_81_FileOpenPickerPreviewControl_ClearCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "ATT.Controls.SubControls.FileOpenPickerPreviewControl.ClearErrorFileCommand":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SubControls.FileOpenPickerPreviewControl");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "ClearErrorFileCommand", "ATT.Controls.Utility.RelayCommand");
                xamlMember.Getter = get_82_FileOpenPickerPreviewControl_ClearErrorFileCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "ATT.Controls.SubControls.ExtendedTextBox.CustomAction":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SubControls.ExtendedTextBox");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "CustomAction", "System.Action<String>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_83_ExtendedTextBox_CustomAction;
                xamlMember.Setter = set_83_ExtendedTextBox_CustomAction;
                break;
            case "ATT.Controls.SubControls.TextBoxValidationExtensions.Format":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SubControls.TextBoxValidationExtensions");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "Format", "ATT.Controls.SubControls.ValidTextBoxFormats");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.DependencyObject");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_84_TextBoxValidationExtensions_Format;
                xamlMember.Setter = set_84_TextBoxValidationExtensions_Format;
                break;
            case "ATT.Controls.SubControls.TextBoxValidationExtensions.IsValid":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SubControls.TextBoxValidationExtensions");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "IsValid", "Boolean");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.DependencyObject");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_85_TextBoxValidationExtensions_IsValid;
                xamlMember.Setter = set_85_TextBoxValidationExtensions_IsValid;
                break;
            case "ATT.Controls.SubControls.TextBoxValidationExtensions.FormatValidationHandler":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SubControls.TextBoxValidationExtensions");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "FormatValidationHandler", "ATT.Controls.SubControls.TextBoxFormatValidationHandler");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.DependencyObject");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_86_TextBoxValidationExtensions_FormatValidationHandler;
                xamlMember.Setter = set_86_TextBoxValidationExtensions_FormatValidationHandler;
                break;
            case "ATT.Controls.SubControls.TextBoxValidationExtensions.ValidBrush":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SubControls.TextBoxValidationExtensions");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "ValidBrush", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.DependencyObject");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_87_TextBoxValidationExtensions_ValidBrush;
                xamlMember.Setter = set_87_TextBoxValidationExtensions_ValidBrush;
                break;
            case "ATT.Controls.SubControls.TextBoxValidationExtensions.InvalidBrush":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SubControls.TextBoxValidationExtensions");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "InvalidBrush", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.DependencyObject");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_88_TextBoxValidationExtensions_InvalidBrush;
                xamlMember.Setter = set_88_TextBoxValidationExtensions_InvalidBrush;
                break;
            case "ATT.Controls.SmsControl.MaxSmsLength":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SmsControl");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "MaxSmsLength", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_89_SmsControl_MaxSmsLength;
                xamlMember.Setter = set_89_SmsControl_MaxSmsLength;
                break;
            case "ATT.Controls.SmsVotingControl.SmsVotingStorage":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SmsVotingControl");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "SmsVotingStorage", "ATT.Services.ISmsVotingStorage");
                xamlMember.Getter = get_90_SmsVotingControl_SmsVotingStorage;
                xamlMember.Setter = set_90_SmsVotingControl_SmsVotingStorage;
                break;
            case "ATT.Controls.SmsVotingControl.SmsShortCode":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SmsVotingControl");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "SmsShortCode", "String");
                xamlMember.Getter = get_91_SmsVotingControl_SmsShortCode;
                xamlMember.Setter = set_91_SmsVotingControl_SmsShortCode;
                break;
            case "ATT.Controls.SubControls.SmsVotingSubControls.SmsVotingChart.ItemsSource":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SubControls.SmsVotingSubControls.SmsVotingChart");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "ItemsSource", "System.Collections.IEnumerable");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_92_SmsVotingChart_ItemsSource;
                xamlMember.Setter = set_92_SmsVotingChart_ItemsSource;
                break;
            case "ATT.Controls.SubControls.SmsVotingSubControls.SmsVotingChart.ForegroundBrush":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SubControls.SmsVotingSubControls.SmsVotingChart");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "ForegroundBrush", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_93_SmsVotingChart_ForegroundBrush;
                xamlMember.Setter = set_93_SmsVotingChart_ForegroundBrush;
                break;
            case "ATT.Controls.SubControls.SmsVotingSubControls.SmsVotingChart.DarkBarBrush":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SubControls.SmsVotingSubControls.SmsVotingChart");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "DarkBarBrush", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_94_SmsVotingChart_DarkBarBrush;
                xamlMember.Setter = set_94_SmsVotingChart_DarkBarBrush;
                break;
            case "ATT.Controls.SubControls.SmsVotingSubControls.SmsVotingChart.LightBarBrush":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SubControls.SmsVotingSubControls.SmsVotingChart");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "LightBarBrush", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_95_SmsVotingChart_LightBarBrush;
                xamlMember.Setter = set_95_SmsVotingChart_LightBarBrush;
                break;
            case "ATT.Controls.SpeechControl.FileOpenPathStyle":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SpeechControl");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "FileOpenPathStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_96_SpeechControl_FileOpenPathStyle;
                xamlMember.Setter = set_96_SpeechControl_FileOpenPathStyle;
                break;
            case "ATT.Controls.SpeechControl.FileOpenButtonStyle":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SpeechControl");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "FileOpenButtonStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_97_SpeechControl_FileOpenButtonStyle;
                xamlMember.Setter = set_97_SpeechControl_FileOpenButtonStyle;
                break;
            case "ATT.Controls.SpeechControl.TranscriptTextStyle":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SpeechControl");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "TranscriptTextStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_98_SpeechControl_TranscriptTextStyle;
                xamlMember.Setter = set_98_SpeechControl_TranscriptTextStyle;
                break;
            case "ATT.Controls.SpeechControl.File":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SpeechControl");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "File", "Windows.Storage.StorageFile");
                xamlMember.Getter = get_99_SpeechControl_File;
                xamlMember.Setter = set_99_SpeechControl_File;
                break;
            case "ATT.Controls.SpeechControl.TranscriptMessage":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SpeechControl");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "TranscriptMessage", "String");
                xamlMember.Getter = get_100_SpeechControl_TranscriptMessage;
                xamlMember.SetIsReadOnly();
                break;
            case "ATT.Controls.SpeechControl.ErrorMessage":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SpeechControl");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "ErrorMessage", "String");
                xamlMember.Getter = get_101_SpeechControl_ErrorMessage;
                xamlMember.SetIsReadOnly();
                break;
            case "ATT.Controls.SpeechControl.IsNewMessageEnabled":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ATT.Controls.SpeechControl");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "IsNewMessageEnabled", "Boolean");
                xamlMember.Getter = get_102_SpeechControl_IsNewMessageEnabled;
                xamlMember.SetIsReadOnly();
                break;
            case "Windows.UI.Color.A":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "A", "Byte");
                xamlMember.Getter = get_103_Color_A;
                xamlMember.Setter = set_103_Color_A;
                break;
            case "Windows.UI.Color.B":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "B", "Byte");
                xamlMember.Getter = get_104_Color_B;
                xamlMember.Setter = set_104_Color_B;
                break;
            case "Windows.UI.Color.G":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "G", "Byte");
                xamlMember.Getter = get_105_Color_G;
                xamlMember.Setter = set_105_Color_G;
                break;
            case "Windows.UI.Color.R":
                userType = (global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlMember(this, "R", "Byte");
                xamlMember.Getter = get_106_Color_R;
                xamlMember.Setter = set_106_Color_R;
                break;
            }
            return xamlMember;
        }

    }

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(global::System.String input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlSystemBaseType
    {
        global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public global::System.Object CreateFromString(global::System.String input)
        {
            if (_enumValues != null)
            {
                global::System.Int32 value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    global::System.Int32 enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( global::System.String.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::ATT.Controls.ATT_Controls_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(global::System.String targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}


